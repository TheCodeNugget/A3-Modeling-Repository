class CfgSkeletons {
    class Skeleton {
        isDiscrete=1;
        skeletonInherit="";
        skeletonBones[]={
			"Red",			"",
			"Blue",			"",
			"Green",		"",
			"Black",		""
		};
    };
};

class CfgModels
{
    class rnc_buntings
    {
        skeletonName="Skeleton";
        sectionsInherit="";
        sections[]={
			"Red",
			"Blue",
			"Green",
			"Black"
		};
        class Animations
        {
			class red_unhide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Red; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0; // Glass shards are hidden when the window is ok...
				unhideValue		= 0.199999; // ...and are shown when damage done to the window reaches set threshold.
			};
			
			class green_unhide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Green; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0; // Glass shards are hidden when the window is ok...
				unhideValue		= 0.399999; // ...and are shown when damage done to the window reaches set threshold.
			};
			
			class blue_unhide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Blue; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0; // Glass shards are hidden when the window is ok...
				unhideValue		= 0.599999; // ...and are shown when damage done to the window reaches set threshold.
			};
			
			class black_unhide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Black; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0; // Glass shards are hidden when the window is ok...
				unhideValue		= 0.799999; // ...and are shown when damage done to the window reaches set threshold.
			};
			
			class red_hide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Red; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.21; // Glass shards are hidden when the window is ok...
			};
			
			class green_hide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= Green; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.41; // Glass shards are hidden when the window is ok...
			};
			
			class blue_hide {
				type			= hide;
				source			= rndOffset; // This source is defined in config.cpp and relates health of the window (0 = fine, 1 = destroyed)
				selection		= blue; // Selection containing glass shards.
				minValue		= 0;
				maxValue		= 1;
				hideValue		= 0.61; // Glass shards are hidden when the window is ok...
			};
        };
    };
};